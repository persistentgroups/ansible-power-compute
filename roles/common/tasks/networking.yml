---
- name: network interfaces file
  copy: content="{{ network_interfaces }}" dest=/etc/network/interfaces
        force=yes owner=root group=root mode=0644
  when: network_interfaces is defined
  tags: ['prereboot']

- name: add the interfaces
  copy: content="{{ item.contents }}"
        dest=/etc/network/interfaces.d/{{ item.filename }}
        force=yes owner=root group=root mode=0644
  when: network_interfaces_d is defined
  with_items: network_interfaces_d
  tags: ['prereboot']

#Set gateway for each undercloud_cidr subnet. gateway is a member of undercloud_cidr list for every subnet.
#Each host can belong to only one undercloud_cidr, so there will be only one nw_gw set per host.
- name: set gateway address for multi subnet 
  set_fact: nw_gw="{{ item.gateway }}"
  when: (update_routes|default('false')|bool) and ((ansible_default_ipv4.network ==  ( item.cidr | ipaddr('network') ))) 
  with_items: "{{ undercloud_cidr }}"

#Add or replace a static route to all undercloud_cidr subnets via the nw_gw of the current subnet.
- name: add static route for multi subnet
  command: "/sbin/ip route replace {{ item.cidr }} via {{ nw_gw }}"
  when: (update_routes|default('false')|bool) and (not (ansible_default_ipv4.network ==  ( item.cidr | ipaddr('network') )))
  with_items: "{{ undercloud_cidr }}"

- name: Check if interface has its own config file
  stat: path=/etc/network/interfaces.d/{{ ansible_default_ipv4.interface }}.cfg
  register: found_in_interfaces_d 
  when: (update_routes|default('false')|bool)

- name: Set network config file
  set_fact: nw_config_file="/etc/network/interfaces.d/{{ ansible_default_ipv4.interface }}.cfg"
  when: (update_routes|default('false')|bool) and found_in_interfaces_d.stat.exists is defined and found_in_interfaces_d.stat.exists

- name: Set network config file
  set_fact: nw_config_file="/etc/network/interfaces"
  when: (update_routes|default('false')|bool) and ( not found_in_interfaces_d.stat.exists|bool )

#Check if the static routes are present in interface configuration file, so that they are persistant across reboots.
- name: Check for static routes in {{ nw_config_file }}
  command: "grep -h 'ip route add {{ item.cidr }} via {{ nw_gw }}' {{ nw_config_file }}"
  with_items: "{{ undercloud_cidr }}"
  changed_when: False
  when: (update_routes|default('false')|bool) and (not ( ansible_default_ipv4.network  == ( item.cidr | ipaddr('network') )))

- name: hosts file
  template: src=etc/hosts dest=/etc/hosts owner=root group=root mode=0644
            backup=yes
  when: etc_hosts is defined
  tags: etc_hosts

- name: netfilter tuning
  template: src=etc/sysctl.d/60-netfilter-tuning.conf
            dest=/etc/sysctl.d/60-netfilter-tuning.conf owner=root group=root
            mode=0644
  notify:
    - apply-sysctl

- name: tcp tuning
  template: src=etc/sysctl.d/60-tcp-tuning.conf
            dest=/etc/sysctl.d/60-tcp-tuning.conf owner=root group=root
            mode=0644
  notify:
    - apply-sysctl

- name: ipv6 privacy
  lineinfile: dest=/etc/sysctl.d/10-ipv6-privacy.conf
              regexp="{{ item.value.regex }}"
              line="{{ item.value.line }}"
  notify:
    - apply-sysctl
  with_dict:
    alluse:
      regex: '^net\.ipv6\.conf\.all\.use_tempaddr'
      line: "net.ipv6.conf.all.use_tempaddr = 0"
    defaultuse:
      regex: '^net\.ipv6\.conf\.default\.use_tempaddr'
      line: "net.ipv6.conf.default.use_tempaddr = 0"

- name: Disable IPv6 on all interfaces by default
  copy: src=etc/sysctl.d/10-disable-ipv6-default.conf
        dest=/etc/sysctl.d/10-disable-ipv6-default.conf
        owner=root group=root mode=0644
  notify:
  - apply-sysctl

- name: conntrack module
  template: src=etc/modprobe.d/conntrack.conf
            dest=/etc/modprobe.d/conntrack.conf owner=root group=root mode=0644
