---
- name: create ceph directory
  file:
    path: /etc/ceph
    state: directory

- name: create ceph log directory
  file: dest=/var/log/ceph state=directory mode=2750 owner=root group=adm

- name: Change ceph log dir acl
  acl: name=/var/log/ceph state=present default=yes etype={{ item.etype }} permissions={{ item.permission }}
  with_items:
    - etype: user
      permission: rw
    - etype: group
      permission: r
    - etype: other
      permission: r

- name: install dependencies
  action: "{{ ansible_pkg_mgr }} name={{ item }} state=present   update_cache=yes"
  with_items: ceph.debian_pkgs

- name: install ceph
  action: "{{ ansible_pkg_mgr }} name={{ item }} state=present"
  with_items: ceph.ceph_pkgs

- name: check for a ceph socket
  shell: "stat /var/run/ceph/*.asok > /dev/null 2>&1"
  changed_when: false
  failed_when: false
  register: ceph_socket

- name: fetch contents of ceph conf file from monitor
  slurp: path=/etc/ceph/ceph.conf
  run_once: true
  delegate_to: "{{ groups['ceph_monitors'][0] }}"
  register: ceph_conf

# for redundancy, and if the hosts in mons get reordered
- name: copy ceph_conf to all hosts
  copy:
    dest: "{{ ceph_conf['source'] }}"
    content: "{{ ceph_conf['content'] | b64decode }}"

# generate uuid for secret.xml
# truncate is to get rid of the newline
- name: generate nova uuid
  shell: uuidgen > /etc/ceph/nova_uuid && truncate -s -1 /etc/ceph/nova_uuid
         creates=/etc/ceph/nova_uuid
  run_once: true
  become: yes
  become_user: root
  delegate_to:  "{{ groups['ceph_monitors'][0] }}"

- name: fetch contents of uuid file
  slurp: path=/etc/ceph/nova_uuid
  run_once: true
  delegate_to: "{{ groups['ceph_monitors'][0] }}"
  register: nova_uuid_file

# for redundancy, and if the hosts in mons get reordered
- name: copy uuid to all hosts
  copy:
    dest: "{{ nova_uuid_file['source'] }}"
    content: "{{ nova_uuid_file['content'] | b64decode }}"


- name: create openstack keys
  command: "{{ ceph_get_or_create }}"
  become: yes
  become_user: root
  delegate_to: "{{ groups['ceph_monitors'][0] }}"
